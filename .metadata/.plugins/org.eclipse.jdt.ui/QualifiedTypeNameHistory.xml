<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<qualifiedTypeNameHistroy>
    <fullyQualifiedTypeName name="com.kh.chapter1.thread.Thread1"/>
    <fullyQualifiedTypeName name="com.kh.chapter1.thread.Thread2"/>
    <fullyQualifiedTypeName name="com.kh.chapter2.sync.Buffer"/>
    <fullyQualifiedTypeName name="com.kh.chapter2.sync.Consumer"/>
    <fullyQualifiedTypeName name="com.kh.chapter2.sync.Producer"/>
    <fullyQualifiedTypeName name="com.kh.inherit.practice.Person"/>
    <fullyQualifiedTypeName name="java.net.Socket"/>
    <fullyQualifiedTypeName name="com.kh.network.receiver.Receiver"/>
    <fullyQualifiedTypeName name="com.kh.inherit.practice.Student"/>
    <fullyQualifiedTypeName name="com.kh.inherit.practice.Employee"/>
    <fullyQualifiedTypeName name="org.graalvm.compiler.lir.alloc.lsra.ssa.SSALinearScan"/>
    <fullyQualifiedTypeName name="org.graalvm.compiler.nodes.PiArrayNode"/>
    <fullyQualifiedTypeName name="com.kh.inherit.practice.Circle"/>
    <fullyQualifiedTypeName name="com.kh.inherit.practice.Rectangle"/>
    <fullyQualifiedTypeName name="com.kh.practice2.model.vo.Animal"/>
    <fullyQualifiedTypeName name="java.util.Scanner"/>
    <fullyQualifiedTypeName name="java.lang.System"/>
    <fullyQualifiedTypeName name="com.kh.control.practice.C_For"/>
    <fullyQualifiedTypeName name="com.hgggny.control.practice.For_A"/>
    <fullyQualifiedTypeName name="com.kh.lambda.basic.A_Lambda"/>
    <fullyQualifiedTypeName name="java.lang.Thread"/>
    <fullyQualifiedTypeName name="java.lang.Runnable"/>
    <fullyQualifiedTypeName name="com.kh.lambda.basic.B_Functional"/>
    <fullyQualifiedTypeName name="com.kh.lambda.basic.functional.A_FunctionalInterface"/>
    <fullyQualifiedTypeName name="com.kh.lambda.basic.functional.B_FunctionalInterface"/>
    <fullyQualifiedTypeName name="java.lang.FunctionalInterface"/>
    <fullyQualifiedTypeName name="com.kh.lambda.basic.functional.C_FunctionalInterface"/>
    <fullyQualifiedTypeName name="com.kh.lambda.standard.A_Consumer"/>
    <fullyQualifiedTypeName name="java.util.function.BiConsumer"/>
    <fullyQualifiedTypeName name="java.util.function.DoubleConsumer"/>
    <fullyQualifiedTypeName name="java.lang.String"/>
    <fullyQualifiedTypeName name="java.util.function.ObjIntConsumer"/>
    <fullyQualifiedTypeName name="com.kh.lambda.standard.B_Supplier"/>
    <fullyQualifiedTypeName name="java.util.function.BooleanSupplier"/>
    <fullyQualifiedTypeName name="java.util.function.LongSupplier"/>
    <fullyQualifiedTypeName name="com.kh.lambda.standard.C_Function"/>
    <fullyQualifiedTypeName name="lombok.Getter"/>
    <fullyQualifiedTypeName name="lombok.Data"/>
    <fullyQualifiedTypeName name="lombok.NoArgsConstructor"/>
    <fullyQualifiedTypeName name="lombok.AllArgsConstructor"/>
    <fullyQualifiedTypeName name="org.graalvm.compiler.hotspot.stubs.Stub"/>
    <fullyQualifiedTypeName name="lombok.EqualsAndHashCode"/>
    <fullyQualifiedTypeName name="java.util.function.Function"/>
    <fullyQualifiedTypeName name="java.util.function.DoubleFunction"/>
    <fullyQualifiedTypeName name="java.util.function.ToIntBiFunction"/>
    <fullyQualifiedTypeName name="java.util.function.ToIntFunction"/>
    <fullyQualifiedTypeName name="java.util.function.LongToDoubleFunction"/>
    <fullyQualifiedTypeName name="com.kh.lambda.standard.D_Operator"/>
    <fullyQualifiedTypeName name="java.util.function.IntUnaryOperator"/>
    <fullyQualifiedTypeName name="java.util.function.BinaryOperator"/>
    <fullyQualifiedTypeName name="java.util.function.Predicate"/>
    <fullyQualifiedTypeName name="java.util.function.IntPredicate"/>
    <fullyQualifiedTypeName name="java.util.function.BiPredicate"/>
    <fullyQualifiedTypeName name="com.kh.lambda.standard.E_Predicate"/>
    <fullyQualifiedTypeName name="com.kh.lambda.basic.C_MethodReference"/>
    <fullyQualifiedTypeName name="java.util.function.IntBinaryOperator"/>
    <fullyQualifiedTypeName name="java.util.function.Consumer"/>
    <fullyQualifiedTypeName name="java.util.function.Supplier"/>
    <fullyQualifiedTypeName name="com.kh.lambda.standard.model.vo.Student"/>
    <fullyQualifiedTypeName name="java.util.function.BiFunction"/>
</qualifiedTypeNameHistroy>
